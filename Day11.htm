<html>
<head>
<title>Advent of code 2019</title>
<script>
var programa = "3,8,1005,8,342,1106,0,11,0,0,0,104,1,104,0,3,8,102,-1,8,10,1001,10,1,10,4,10,1008,8,0,10,4,10,1002,8,1,29,2,1006,19,10,1,1005,19,10,2,1102,11,10,3,8,102,-1,8,10,101,1,10,10,4,10,108,1,8,10,4,10,1001,8,0,62,2,1009,15,10,3,8,102,-1,8,10,101,1,10,10,4,10,108,1,8,10,4,10,1002,8,1,88,2,1101,6,10,3,8,102,-1,8,10,1001,10,1,10,4,10,108,0,8,10,4,10,102,1,8,114,1,105,8,10,1,1102,18,10,2,6,5,10,1,2,15,10,3,8,1002,8,-1,10,101,1,10,10,4,10,1008,8,1,10,4,10,1001,8,0,153,1,105,15,10,3,8,1002,8,-1,10,1001,10,1,10,4,10,108,0,8,10,4,10,102,1,8,178,1,1006,15,10,1006,0,96,1006,0,35,1,104,7,10,3,8,1002,8,-1,10,1001,10,1,10,4,10,108,0,8,10,4,10,102,1,8,214,1006,0,44,2,1105,17,10,1,1107,19,10,1,4,16,10,3,8,1002,8,-1,10,1001,10,1,10,4,10,1008,8,0,10,4,10,102,1,8,252,1006,0,6,1,1001,20,10,1006,0,45,2,1109,5,10,3,8,1002,8,-1,10,101,1,10,10,4,10,108,1,8,10,4,10,102,1,8,287,2,101,20,10,2,1006,18,10,1,1009,9,10,3,8,102,-1,8,10,1001,10,1,10,4,10,108,1,8,10,4,10,1002,8,1,321,101,1,9,9,1007,9,1031,10,1005,10,15,99,109,664,104,0,104,1,21102,48210117528,1,1,21102,1,359,0,1105,1,463,21102,932700763028,1,1,21102,370,1,0,1105,1,463,3,10,104,0,104,1,3,10,104,0,104,0,3,10,104,0,104,1,3,10,104,0,104,1,3,10,104,0,104,0,3,10,104,0,104,1,21102,1,179557207079,1,21102,417,1,0,1105,1,463,21102,1,28994202816,1,21101,0,428,0,1105,1,463,3,10,104,0,104,0,3,10,104,0,104,0,21101,0,709580710756,1,21102,1,451,0,1106,0,463,21102,825016201984,1,1,21101,462,0,0,1106,0,463,99,109,2,21201,-1,0,1,21102,40,1,2,21101,0,494,3,21102,1,484,0,1105,1,527,109,-2,2106,0,0,0,1,0,0,1,109,2,3,10,204,-1,1001,489,490,505,4,0,1001,489,1,489,108,4,489,10,1006,10,521,1101,0,0,489,109,-2,2105,1,0,0,109,4,1201,-1,0,526,1207,-3,0,10,1006,10,544,21102,1,0,-3,21202,-3,1,1,22102,1,-2,2,21102,1,1,3,21102,563,1,0,1105,1,568,109,-4,2106,0,0,109,5,1207,-3,1,10,1006,10,591,2207,-4,-2,10,1006,10,591,21202,-4,1,-4,1105,1,659,22102,1,-4,1,21201,-3,-1,2,21202,-2,2,3,21102,610,1,0,1106,0,568,21201,1,0,-4,21102,1,1,-1,2207,-4,-2,10,1006,10,629,21102,1,0,-1,22202,-2,-1,-2,2107,0,-3,10,1006,10,651,21202,-1,1,1,21102,1,651,0,106,0,526,21202,-2,-1,-2,22201,-4,-2,-4,109,-5,2106,0,0";
var op_par =
{
	1: 3, //add
	2: 3, //mul
	3: 1, //in
	4: 1, //out
	5: 2, //jnz
	6: 2, //jz
	7: 3, //setl
	8: 3, //sete
	9: 1  //add rel
};
function transformN(num)
{
	return((num == 0) ? "█" : "░");
}
function cloneArray(arr)
{
	var r = [];
	var len = arr.length;
	for(var i = 0; i < len; i++)
		r.push(arr[i]);
	return(r);
}
//prg=array de instrucciones
//state=array que contiene el estado [posicion_programa, relativo]
//input=array de entradas
//output=array de salidas
//inputSize=número de datos de entrada. la función se saldrá cuando se intente leer una entrada y no queden datos. si es -1, se considera infinito
//haltOnOutput=si se debe salir cuando se produzca la primera salida
//0=el programa terminó
//1=la función se salió porque se intentó leer un dato y ya no quedaban
//2=la función se salió porque el programa produjo un dato de salida
//3=instrucción no válida
//4=modo de memoria no válido
function ejecutar(prg, state, input, output, inputSize, haltOnOutput)
{
	var inputNum = 0;
	var posicion = Number(state[0]);
	var nuevaPos;
	while(1)
	{
		var op = Number(prg[posicion]) % 100;
		var p = Math.floor(Number(prg[posicion]) / 100);
		var numparams = op_par[op];
		var params = [];
		var params_orig = [];
		var params_types = [];
		var tmp, write;
		for(var i = 0; i < numparams; i++)
		{
			params_orig.push(prg[posicion + i + 1] === undefined ? undefined : prg[posicion + i + 1]);
			params_types.push(p % 10);
			switch(params_types[i])
			{
			case 0:
				tmp = (params_orig[i] === undefined) ? 0 : Number(params_orig[i]);
				tmp = (prg[tmp] === undefined) ? 0n : BigInt(prg[tmp]);
				params.push(tmp);
				break;
			case 1:
				tmp = (params_orig[i] === undefined) ? 0n : BigInt(params_orig[i]);
				params.push(tmp);
				break;
			case 2:
				tmp = (params_orig[i] === undefined) ? 0 : Number(params_orig[i]);
				tmp += Number(state[1]);
				tmp = (prg[tmp] === undefined) ? 0n : BigInt(prg[tmp]);
				params.push(tmp);
				break;
			default:
				return(4);
			}
			p = Math.floor(p / 10);
		}
		nuevaPos = posicion + op_par[op] + 1;
		write = undefined;
		switch(op)
		{
		case 1: //add
			write = BigInt(params[0]) + BigInt(params[1]);
			break;
		case 2: //mul
			write = BigInt(params[0]) * BigInt(params[1]);
			break;
		case 3: //in
			if(inputSize == 0)
				return(1);
			if(inputSize != -1)
				inputSize--;
			write = BigInt(input[inputNum++]);
			break;
		case 4: //out
			output.push(params[0]);
			if(haltOnOutput)
			{
				state[0] = nuevaPos;
				return(2);
			}
			break;
		case 5: //jnz
			if(BigInt(params[0]) != 0n)
				nuevaPos = Number(params[1]);
			break;
		case 6: //jz
			if(BigInt(params[0]) == 0n)
				nuevaPos = Number(params[1]);
			break;
		case 7: //setl
			write = Number(BigInt(params[0]) < BigInt(params[1]));
			break;
		case 8: //sete
			write = Number(BigInt(params[0]) == BigInt(params[1]));
			break;
		case 9: //add rel
			state[1] = Number(state[1]) + Number(params[0]);
			break;
		case 99: //exit
			return(0);
		default:
			return(3);
		}
		if(write !== undefined)
		{
			if(params_types[params_types.length - 1] == 2)
				prg[Number(prg[Number(posicion) + Number(numparams)]) + Number(state[1])] = write;
			else
				prg[Number(prg[Number(posicion) + Number(numparams)])] = write;
		}
		state[0] = posicion = nuevaPos;
	}
}
function runRobot(panel)
{
	var prg = programa.split(",");
	var estado = [0, 0];
	var input = [];
	var output = [];
	var resultado;
	var direccion = 0; //0=arriba, 1=izquierda, 2=abajo, 3=derecha
	var x = 0, y = 0;
	var fin = 0;
	var output_length = 0;
	var color;
	while(!fin)
	{
		resultado = ejecutar(prg, estado, input, output, input.length, 1);
		input = [];
		switch(resultado)
		{
		case 0: //fin
			fin = 1;
			break;
		case 1: //input
			if(panel["" + x + "," + y] === undefined)
				color = 0;
			else
				color = panel["" + x + "," + y];
			input.push(color);
			break;
		case 2: //output
			output_length++;
			if(output_length == 2)
			{
				output_length = 0;
				panel["" + x + "," + y] = output[0];
				if(output[1] == 0)
				{
					direccion++;
					if(direccion == 4) direccion = 0;
				}
				else
				{
					direccion--;
					if(direccion == -1) direccion = 3;
				}
				switch(direccion){case 0: y--; break; case 1: x--; break; case 2: y++; break; case 3: x++; break;}
				output = [];
			}
			break;
		default:
			alert("Error.");
			return;
		}
	}
}
function compu()
{
	var panel = [];
	runRobot(panel);
	var numpix = 0;
	for(var key in panel)
		numpix++;
	document.getElementById("resultado1").textContent = "Número de píxeles pintados por el robot: " + numpix;
	
	panel = [];
	panel ["0,0"] = 1;
	runRobot(panel);
	var minx = 0, miny = 0, maxx = 0, maxy = 0;
	for(var key in panel)
	{
		var arr = key.split(",");
		var x = Number(arr[0]);
		var y = Number(arr[1]);
		if(x < minx) minx = x;
		if(x > maxx) maxx = x;
		if(y < miny) miny = y;
		if(y > maxy) maxy = y;
	}
	document.getElementById("resultado2").style.fontFamily = "monospace";
	var w = maxx - minx + 1;
	var h = maxy - miny + 1;
	for(var y = 0; y < h; y++)
	{
		var str = "";
		for(var x = 0; x < w; x++)
		{
			var color;
			if(panel["" + (x + minx) + "," + (y + miny)] === undefined)
				color = 0;
			else color = panel["" + (x + minx) + "," + (y + miny)];
			str += transformN(color);
		}
		document.getElementById("resultado2").appendChild(document.createTextNode(str));
		document.getElementById("resultado2").appendChild(document.createElement("br"));
	}
}
</script>
</head>
<body>
<h2>Día 11: robot pintamonas</h2>
<input type="button" value="Matriculizar" onclick="compu()" /><br />
<span id="resultado1"></span><br />
<span id="resultado2"></span>
</body>
</html>